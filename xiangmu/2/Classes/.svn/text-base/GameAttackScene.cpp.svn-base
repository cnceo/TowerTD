#include "GameAttackScene.h"
#include "AttackLayer.h"
#include "MainRoleLayer.h"
#include "EnemyLayer.h"
#include "bondingBox.h"
#include "cocostudio/CocoStudio.h"
#include "ui/CocosGUI.h"
using namespace cocostudio;
using namespace ui;
bool GameAttackScene::init(){
	if (!Scene::init()) {
		return false;
	}
	
	ArmatureDataManager::getInstance()->addArmatureFileInfo("EnemyFlyOne/EnemyFlyOne.ExportJson");
	ArmatureDataManager::getInstance()->addArmatureFileInfo("dota/dota.ExportJson");
	ArmatureDataManager::getInstance()->addArmatureFileInfo("EnemyWalkOne/EnemyWalkOne.ExportJson");
	ArmatureDataManager::getInstance()->addArmatureFileInfo("dinosaurEnemy/dinosaurEnemy.ExportJson");
	ArmatureDataManager::getInstance()->addArmatureFileInfo("cowEnemy/cowEnemy.ExportJson");
	ArmatureDataManager::getInstance()->addArmatureFileInfo("snakeEnemy/snakeEnemy.ExportJson");
	auto attackLayer = AttackLayer::create();
	attackLayer->setName("attackLayer");
	this->addChild(attackLayer);
	//mainRole Layer
	MainRoleLayer *mainRoleLayer = MainRoleLayer::create();
	this->addChild(mainRoleLayer);
	//Enemy Layer
	EnemyLayer *enemyLayer = EnemyLayer::create();
	enemyLayer->setName("enemyLayer");
	this->addChild(enemyLayer);
	//
	bondingBox *bond = bondingBox::create();
	this->addChild(bond);
	return true;
}
Layer *GameAttackScene::getAttackLayer(){
	return this->getChildByName<Layer *>("attackLayer");
}
Layer *GameAttackScene::getEnemyLayer(){
	return this->getChildByName<Layer *>("enemyLayer");
}